*//////////////////////////////////////////////////////////////////////////////*

Page: SourceScribe manual

## What is SourceScribe?

  SourceScribe is a documentation-generation tool which takes your formatted
  source code comments and creates a full heirarchal manual in HTML or PDF,
  like this one you're viewing now.

  It is written in PHP and is ran from the command line. Being written in PHP,
  it has very little requirements: it can run on any OS that supports PHP4
  (Mac, Linux, Windows) and requires no other libraries.

  This is the manual for SourceScribe version 0.0 and 0.1 series. 

Downloading:

  You may download the latest version of SourceScribe from [SourceScribe's
  github page][gh]. If you have **git** installed, you may also do a pull of the
  latest sources from the tree. Simply type:

    git pull git@github.com:rstacruz/SourceScribe.git

  [gh]: http://github.com/rstacruz/SourceScribe/

See it in action:

  This site that you're looking at now is generated by SourceScribe, generated
  from the actual SourceScribe source tree! You're looking at the very output
  of SourceScribe.

*//////////////////////////////////////////////////////////////////////////////*

Page: Installing SourceScribe
[Grouped under "Getting started"]


Downloading:

  You may download the latest version of SourceScribe from [SourceScribe's
  github page][gh]. If you have **git** installed, you may also do a pull of the
  latest sources from the tree. Simply type:

    git pull git@github.com:rstacruz/SourceScribe.git

  [gh]: http://github.com/rstacruz/SourceScribe/

Installation:

  Before you can use SourceScribe, you must first install the `ss` command.
  Please read the `README` file.

  Once you've installed SourceScribe, you are now ready to generate your
  configuration, document your code, and generate your first documentation
  manual.

Continue:
  Next: [[Configuration]] &rarr;

*//////////////////////////////////////////////////////////////////////////////*

Page: Configuration
[Grouped under "Getting started"]

Starting up:

  For SourceScribe to work on your code, it must first have a configuration file.

  To begin, type `ss makeconfig` in your project folder. This will create a bare
  configuration file `sourcescribe.conf` with defaults that you can edit to
  your needs. After you've done this (and documented your codebase of course),
  you can simply type `ss` to generate your documentation.

  When running `ss`, SourceScribe will look for this `sourcescribe.conf` file.
  SourceScribe will check in the current folder and it's parent folders, so you
  may call `ss` anywhere inside your source tree.

File format:

  The configuration file is in YAML format, which is a simple format for
  defining key/value pairs and arrays.
  Here's an example:

    # Comment
    # Blank lines and comments are ignored

    key_one:  value
    key_two:  "value"

    key_three:
      sub_key_one: value
      sub_key_two: value

    key_four:
      - array member 1
      - array member 2

  For more information on this file format, see the [YAML in 5 minutes][l1]
  tutorial, the [YAML Wikipedia entry][l2], or the official [YAML site][l3].

  [l1]: http://yaml.kwiki.org/?YamlInFiveMinutes
  [l2]: http://en.wikipedia.org/wiki/YAML
  [l3]: http://www.yaml.org


Creating your config file:

  In the command line, change to the directory of your project and type
  `ss makeconfig`. This will output a sample `sourcescribe.conf` for you
  to edit to your needs.

  Note that the only required options are `name` and `output`. Technically,
  This is valid configuration file: 

    # sourcescribe.conf
    name: My project
    output: [{ driver: "html", path: "doc/" }]

Required options:

  name
  : The project name. This will be the title of the entire thing.

    > <code>src_path:  
    > &nbsp; [ src, include ]</code>

  output  - Output

More options:

  src_path
  : Source path. Multiple paths may be defined in an array:

    > <code>src_path:  
    > &nbsp; [ src, include ]</code>

  exclude
  : An array of regex patterns to match filenames against.
    Any file that matches will not be parsed. In this example below,
    SourceScribe will not skip files under the folder `svn`, `git`, and `cache`: 

    > <code>exclude:  
    > &nbsp; - \.svn/  
    > &nbsp; - \.git/  
    > &nbsp; - /cache/</code>

  reset_block_types
  : ...
  
  block_types
  : ...
  
  reset_tags
  : ...
  
  tags
  : ...
  
  tag_synonyms
  : ...
  
  include
  : File types to include. This is an array of regex patterns. In the example
    below, this will make SourceScribe scan php3 and php4 file types.
    
    > <code>include:  
    > &nbsp; - \.php3$  
    > &nbsp; - \.php4$</code>
    
    If you have a plugin that provides an alternate reader, you can define which
    reader to use for each file type.
    
    > <code>include:    
    > &nbsp; \.php3$: default  
    > &nbsp; \.php4$: default</code>

For block types:
  Every `block_types` entry can have any of these options.
  Note that *all* of them are optional.

  has_brief        - .
  title_plural     - .
  parent_in_id     - .
  starts_group_for - .
  block_class      - .
  title_prefix     - .
  title_suffix     - .
  tags             - .
  short            - .
  synonyms         - .

Continue:
  Next: [[Documenting your code]] &rarr;

*//////////////////////////////////////////////////////////////////////////////*

Page: Documenting your code
[Grouped under "Getting started"]

Do something like

*     /*
*      * Class: MyClass
*      * This is my classname.
*      *
*      * More documentation goes here.
*      * /
*     class MyClass
*     {
*         ...

And stuff!

*//////////////////////////////////////////////////////////////////////////////*

Page: Documentation reference
[Grouped under "References"]

Documentation reference:

  To be written

*//////////////////////////////////////////////////////////////////////////////*

Page: API reference
[Grouped under "References"]

API reference:

  This reference is made available for those looking into writing plugins.

  Plugins are not supported at the moment, but will be supported before the
  0.2 release.

*//////////////////////////////////////////////////////////////////////////////*
